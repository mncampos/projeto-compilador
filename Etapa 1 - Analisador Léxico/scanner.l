%{
#include "tokens.h"
%}


%option yylineno
%option noyywrap
%x COMMENT

%%
"/*" {BEGIN(COMMENT);}
<COMMENT>"*/" {BEGIN(INITIAL);}
<COMMENT>\n {}
<COMMENT>. {}

(\/\/).* {}
[ \t]+   {}

"int" {return TK_PR_INT; }
"float" { return TK_PR_FLOAT; }
"bool" { return TK_PR_BOOL; }
"if" { return TK_PR_IF; }
"else" { return TK_PR_ELSE; }
"while" { return TK_PR_WHILE; }
"return" { return TK_PR_RETURN; }
"false" { return TK_LIT_FALSE; }
"true" { return TK_LIT_TRUE; }

"<=" { return TK_OC_LE; }
">=" { return TK_OC_GE; }
"==" { return TK_OC_EQ; }
"!=" { return TK_OC_NE; }
"&" { return TK_OC_AND; }
"|" { return TK_OC_OR; }

"!" { return '!'; }
"*" { return '*'; }
"/" { return '/'; }
"%" { return '%'; }
"+" { return '+'; }
"-" { return '-'; }
"<" { return '<'; }
">" { return '>'; }
"{" { return '{'; }
"}" { return '}'; }
"(" { return '('; }
")" { return ')'; }
"=" { return '='; }
"," { return ','; }
";" { return ';'; }

([a-z]|_)([a-z]|[0-9]|_)* { return TK_IDENTIFICADOR; }
[0-9]+ {return TK_LIT_INT;}
[0-9]*\.[0-9]+ {return TK_LIT_FLOAT;}




. {return TK_ERRO;}
%%

int get_line_number(void) {
    return yylineno;
}